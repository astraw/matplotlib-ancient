# wrap the plot commands defined in axes.  The code generated by this
# file is pasted into pylab.py
__fmt = """\

# this function was autogenerated by boilerplate.py.  Do not edit as
# changes will be lost
def %(func)s(*args, **kwargs):
    try:
        ret =  gca().%(func)s(*args, **kwargs)
    except ValueError, msg:
        msg = raise_msg_to_str(msg)
        error_msg(msg)
    else:
        draw_if_interactive()
        %(mappable)s
        return ret
%(func)s.__doc__ = Axes.%(func)s.__doc__
"""


# these methods are all simple wrappers of Axes methods by the same
# name.  
_methods = (
    'axhline',
    'axhspan',
    'axvline',
    'axvspan',
    'bar',
    'barh',
    'cla',
    'cohere',
    'contour',
    'csd',
    'errorbar',
    'fill',
    'grid',
    'hist',
    'hlines',
    'imshow',
    'legend',
    'loglog',
    'pcolor',
    'pcolor_classic',
    'plot',
    'plot_date',
    'psd',
    'scatter',
    'scatter_classic',
    'semilogx',
    'semilogy',
    'stem',
    'table',
    'text',
    'vlines',
    )

cmappable = ( 'scatter', 'pcolor', 'imshow')


for func in _methods:
    if func in cmappable:
        mappable = 'gci._current = ret'
    else:
        mappable = ''
    print __fmt%locals()

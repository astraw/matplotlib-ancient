New entries should be added at the top

2004-05-27 Lots of small bug fixes: rotated text at negative angles,
           errorbar autoscaling, right tick label position - JDH

2004-05-26 Added Gary's errorbar stuff and made some fixes for length
           one plots and constant data plots - JDH

2004-05-25 Tweaked TkAgg backend so that canvas.draw() works
	   more like the other backends.  Fixed a bug resulting
	   in 2 draws per figure mangager show().      - JTM

------------------------------------------------------------
2004-05-19 0.54 released - JDH

2004-05-18 Added newline seperated text with rotations to text.Text
           layout - JDH

2004-05-16 Added fast pcolor using PolyCollections.  - JDH

2004-05-14 Added fast polygon collections - changed scatter to use
           them.  Added multiple symbols to scatter.  10x speedup on
	   large scatters using *Agg and 5X speedup for ps. - JDH

2004-05-14 On second thought... created an "nx" namespace in 
	   in numerix which maps type names onto typecodes
	   the same way for both numarray and Numeric.  This
	   undoes my previous change immediately below. To get a
	   typename for Int16 useable in a Numeric extension: 
	   say nx.Int16. - JTM             

2004-05-15 Rewrote transformation class in extension code, simplified
           all the artist constructors - JDH

2004-05-14 Modified the type definitions in the numarray side of
	   numerix so that they are Numeric typecodes and can be
	   used with Numeric compilex extensions.  The original
	   numarray types were renamed to type<old_name>.    - JTM

2004-05-06 Gary Ruben sent me a bevy of new plot symbols and markers.
           See matplotlib.matlab.plot - JDH

2004-05-06 Total rewrite of mathtext - factored ft2font stuff out of
           layout engine and defined abstract class for font handling
           to lay groundwork for ps mathtext.  Rewrote parser and made
           layout engine much more precise.  Fixed all the layout
           hacks.  Added spacing commands \/ and \hspace.  Added
           composite chars and defined angstrom. - JDH

2004-05-05 Refactored text instances out of backend; aligned
           text with arbitrary rotations is now supported - JDH

2004-05-05 Added a Matrix capability for numarray to numerix.  JTM

2004-05-04 Updated whats_new.html.template to use dictionary and
           template loop, added anchors for all versions and items;
           updated goals.txt to use those for links. PG

2004-05-04 Added fonts_demo.py to backend_driver, and AFM and TTF font
           caches to font_manager.py - PEB

2004-05-03 Redid goals.html.template to use a goals.txt file that
           has a pseudo restructured text organization. PG

2004-05-03 Removed the close buttons on all GUIs and added the python
           #! bang line to the examples following Steve Chaplin's
	   advice on matplotlib dev

2004-04-29 Added CXX and rewrote backend_agg using it; tracked down
           and fixed agg memory leak - JDH

2004-04-29 Added stem plot command - JDH

2004-04-28 Fixed PS scaling and centering bug - JDH

2004-04-26 Fixed errorbar autoscale problem - JDH

2004-04-22 Fixed copy tick attribute bug, fixed singular datalim
           ticker bug; fixed mathtext fontsize interactive bug. - JDH

2004-04-21 Added calls to draw_if_interactive to axes(), legend(),
           and pcolor().  Deleted duplicate pcolor(). - JTM

------------------------------------------------------------
2004-04-21 matplotlib 0.53 release

2004-04-19 Fixed vertical alignment bug in PS backend - JDH

2004-04-17 Added support for two scales on the "same axes" with tick
           different ticking and labeling left right or top bottom.
           See examples/two_scales.py - JDH

2004-04-17 Added default dirs as list rather than single dir in
	   setupext.py - JDH

2004-04-16 Fixed wx exception swallowing bug (and there was much
           rejoicing!) - JDH

2004-04-16 Added new ticker locator a formatter, fixed default font
           return - JDH

2004-04-16 Added get_name method to FontProperties class. Fixed font lookup
	   in GTK and WX backends. - PEB

2004-04-16 Added get- and set_fontstyle msethods. - PEB

2004-04-10 Mathtext fixes: scaling with dpi,  - JDH

2004-04-09 Improved font detection algorithm. - PEB

2004-04-09 Move deprecation warnings from text.py to __init__.py - PEB

2004-04-09 Added default font customization - JDH

2004-04-08 Fixed viewlim set problem on axes and axis. - JDH

2004-04-07 Added validate_comma_sep_str and font properties paramaters to
	   __init__.  Removed font families and added rcParams to
	   FontProperties __init__ arguments in font_manager.  Added
	   default font property parameters to .matplotlibrc file with
	   descriptions.  Added deprecation warnings to the get_- and
	   set_fontXXX methods of the Text object. - PEB

2004-04-06 Added load and save commands for ASCII data - JDH

2004-04-05 Improved font caching by not reading AFM fonts until needed.
	   Added better documentation.  Changed the behaviour of the
           get_family, set_family, and set_name methods of FontProperties.
	   - PEB

2004-04-05 Added WXAgg backend - JDH

2004-04-04 Improved font caching in backend_agg with changes to
           font_manager - JDH

2004-03-29 Fixed fontdicts and kwargs to work with new font manager -
           JDH








--------------------------------------------
This is the Old, stale, never used changelog

2002-12-10 - Added a TODO file and CHANGELOG.  Lots to do -- get
             crackin'!

           - Fixed y zoom tool bug

           - Adopted a compromise fix for the y data clipping problem.
             The problem was that for solid lines, the y data clipping
             (as opposed to the gc clipping) caused artifactual
             horizontal solid lines near the ylim boundaries.  I did a
             5% offset hack in Axes set_ylim functions which helped,
             but didn't cure the problem for very high gain y zooms.
             So I disabled y data clipping for connected lines .  If
             you need extensive y clipping, either plot(y,x) because x
             data clipping is always enabled, or change the _set_clip
             code to 'if 1' as indicated in the lines.py src.  See
             _set_clip in lines.py and set_ylim in figure.py for more
             information.


2002-12-11 - Added a measurement dialog to the figure window to
             measure axes position and the delta x delta y with a left
             mouse drag.  These defaults can be overridden by deriving
             from Figure and overrriding button_press_event,
             button_release_event, and motion_notify_event,
             and _dialog_measure_tool.

           - fixed the navigation dialog so you can check the axes the
             navigation buttons apply to.



2003-04-23 Released matplotlib v0.1

2003-04-24 Added a new line style PixelLine2D which is the plots the
           markers as pixels (as small as possible) with format
           symbol ','
 
           Added a new class Patch with derived classes Rectangle,
           RegularPolygon and Circle

2003-04-25 Implemented new functions errorbar, scatter and hist
 
           Added a new line type '|' which is a vline.  syntax is 
	   plot(x, Y, '|') where y.shape = len(x),2 and each row gives
	   the ymin,ymax for the respective values of x.  Previously I
	   had implemented vlines as a list of lines, but I needed the
	   efficientcy of the numeric clipping for large numbers of
	   vlines outside the viewport, so I wrote a dedicated class
	   Vline2D which derives from Line2D

            
2003-05-01
   
   Fixed ytick bug where grid and tick show outside axis viewport with gc clip

2003-05-14
 
   Added new ways to specify colors 1) matlab format string 2)
   html-style hex string, 3) rgb tuple.  See examples/color_demo.py

2003-05-28

    Changed figure rendering to draw form a pixmap to reduce flicker.
    See examples/system_monitor.py for an example where the plot is
    continusouly updated w/o flicker.  This example is meant to
    simulate a system monitor that shows free CPU, RAM, etc...
	
2003-08-04

    Added Jon Anderson's GTK shell, which doesn't require pygtk to
    have threading built-in and looks nice!

2003-08-25
   
   Fixed deprecation warnings for python2.3 and pygtk-1.99.18

2003-08-26

   Added figure text with new example examples/figtext.py


2003-08-27
  
   Fixed bugs i figure text with font override dictionairies and fig
   text that was placed outside the window bounding box

2003-09-1 thru 2003-09-15  

   Added a postscript and a GD module backend

2003-09-16

   Fixed font scaling and point scaling so circles, squares, etc on
   lines will scale with DPI as will fonts.  Font scaling is not fully
   implemented on the gtk backend because I have not figured out how
   to scale fonts to arbitrary sizes with GTK

2003-09-17 
 
   Fixed figure text bug which crashed X windows on long figure text
   extending beyond display area.  This was, I believe, due to the
   vestigial erase functionality that was no longer needed since I
   began rendering to a pixmap

2003-09-30  Added legend

2003-10-01 Fixed bug when colors are specified with rgb tuple or hex
   string.


2003-10-21  Andrew Straw provided some legend code which I modified
      and incorporated.  Thanks Andrew!

2003-10-27 Fixed a bug in axis.get_view_distance that affected zoom in
  versus out with interactive scrolling, and a bug in the axis text
  reset system that prevented the text from being redrawn on a
  interactive gtk view lim set with the widget
 
  Fixed a bug in that prevented the manual setting of ticklabel
  strings from working properly

2003-11-02 - Do a nearest neighbor color pick on GD when
             allocate fails

2003-11-02 
   - Added pcolor plot
   - Added MRI example
   - Fixed bug that screwed up label position if xticks or yticks were
     empty
   - added nearest neighbor color picker when GD max colors exceeded
   - fixed figure background color bug in GD backend

2003-11-10 - 2003-11-11
   - major refactoring.  
     * Ticks (with labels, lines and grid) handled by dedicated class
     * Artist now know bounding box and dpi
     * Bounding boxes and transforms handled by dedicated classes
     * legend in dedicated class.  Does a better job of alignment and
       bordering.  Can be initialized with specific line instances.
       See examples/legend_demo2.py
 

2003-11-14 Fixed legend positioning bug and added new position args

2003-11-16 Finsihed porting GD to new axes API


2003-11-20 - add TM for matlab on website and in docs


2003-11-20 - make a nice errorbar and scatter screenshot   

2003-11-20 - auto line style cycling for multiple line types
   broken

2003-11-18 (using inkrect) :logical rect too big on gtk backend

2003-11-18 ticks don't reach edge of axes in gtk mode --
   rounding error?

2003-11-20 - port Gary's errorbar code to new API before 0.40

2003-11-20 - problem with stale _set_font.  legend axes box
   doesn't resize on save in GTK backend -- see htdocs legend_demo.py

2003-11-21 - make a dash-dot dict for the GC

2003-12-15 - fix install path bug

 
